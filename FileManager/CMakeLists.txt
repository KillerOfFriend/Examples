cmake_minimum_required(VERSION 3.16.0 FATAL_ERROR)

#====================================================================
# Инициализируем проект
#====================================================================
set(VERSION 1.0.0.0)                                                # Инициализируем версию проекта
project(FileManager VERSION ${HM_VERSION} LANGUAGES CXX)            # Инициализируем проект

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")  # Добавляем путь поиска cmake файлов
include(InitUtils)                                                  # Подключаем инициализирующие утилиты
#====================================================================

#====================================================================
# Задаём параметры компиляции
#====================================================================
set(CMAKE_CXX_STANDARD 14)              # Задаём стандарт c++14
set(CMAKE_CXX_EXTENSIONS OFF)           # Не использовать расширения GNU
set(CMAKE_CXX_STANDARD_REQUIRED ON)     # Запретить автоматическое занижение стандарта (если компилятор не соответствует)
#====================================================================

#====================================================================
# Задаём глобальные параметры проекта
#====================================================================
set(QT_VERSION      5 ) # Задаём используемую версию Qt
#====================================================================
# Автоматизируем Qt сборку
set(CMAKE_AUTOMOC   ON) # Автоматическая компиляция MOC
set(CMAKE_AUTORCC   ON) # Автоматическая обработка ресурсов
set(CMAKE_AUTOUIC   ON) # Автоматическая обработка UI
#====================================================================

#====================================================================
# Задаём глобальные параметры корневого файла проекта
#====================================================================
set(PROJECT_ROOT_PATH       ${CMAKE_CURRENT_SOURCE_DIR})    # Указываем путь к корневой папке проекта
set(CMAKE_MODULES_PATH      ${PROJECT_ROOT_PATH}/config)    # Указываем путь к файлам конфигураций
set(LIB_TYPE                SHARED)                         # Задаём тип собираемых библиотек (SHARED\STATIC)
#====================================================================

#====================================================================
# Формируем пути сборки
#====================================================================
set(COMPILER_SUFFIX ${CMAKE_CXX_COMPILER_ID}/${CMAKE_BUILD_TYPE}/${BUILD_BITNESS})  # Формируем суфикс сборки на основе параметров компилятора
set(BUILD_PATH ${PROJECT_ROOT_PATH}/build/${COMPILER_SUFFIX})                       # Формируем путь к папке сборки

set(LIBRARY_OUTPUT_PATH     "${BUILD_PATH}/lib")                                    # Указываем путь папке сборки библиотек
set(EXECUTABLE_OUTPUT_PATH  "${BUILD_PATH}/bin")                                    # Указываем путь к папке сборки бинарей
#====================================================================

#====================================================================
# Начинаем сборку проекта
#====================================================================
#add_subdirectory(libraries)                                 # Собираем библиотеки
add_subdirectory(modules)                                   # Собираем модули
#====================================================================
